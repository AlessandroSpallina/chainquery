# coding: utf-8

"""
    Chain Query

    The LBRY blockchain is read into SQL where important structured information can be extracted through the Chain Query API.

    OpenAPI spec version: 0.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class TableSize(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'table_name': 'str',
        'nr_rows': 'int'
    }

    attribute_map = {
        'table_name': 'TableName',
        'nr_rows': 'NrRows'
    }

    def __init__(self, table_name=None, nr_rows=None):
        """
        TableSize - a model defined in Swagger
        """

        self._table_name = None
        self._nr_rows = None

        if table_name is not None:
          self.table_name = table_name
        if nr_rows is not None:
          self.nr_rows = nr_rows

    @property
    def table_name(self):
        """
        Gets the table_name of this TableSize.
        Name of the table being referenced.

        :return: The table_name of this TableSize.
        :rtype: str
        """
        return self._table_name

    @table_name.setter
    def table_name(self, table_name):
        """
        Sets the table_name of this TableSize.
        Name of the table being referenced.

        :param table_name: The table_name of this TableSize.
        :type: str
        """

        self._table_name = table_name

    @property
    def nr_rows(self):
        """
        Gets the nr_rows of this TableSize.
        The number of rows in the referenced table

        :return: The nr_rows of this TableSize.
        :rtype: int
        """
        return self._nr_rows

    @nr_rows.setter
    def nr_rows(self, nr_rows):
        """
        Sets the nr_rows of this TableSize.
        The number of rows in the referenced table

        :param nr_rows: The nr_rows of this TableSize.
        :type: int
        """

        self._nr_rows = nr_rows

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, TableSize):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
